import pygame
import random
import math

pygame.init()
pygame.display.set_caption('Eat')

# define colours
Bl = (0, 0, 0)
R = (255, 0, 0)
G = (0, 255, 0)
B = (0, 0, 255)
W = (255, 255, 255)
Br = (139, 69, 19)
Sky = (240, 248, 255)

#  screen
SIZE = [1350, 720]
screen = pygame.display.set_mode(SIZE)

score = 0

#  empty list for coordinates of dots
dot_listr = []
dot_listg = []
dot_listb = []
dot_listbl = []
clock = pygame.time.Clock()

#  shows the instructions
def intro():
    font = pygame.font.SysFont('Comic Sans MS', 25)
    output_string = "avoid the falling dots! Collect black dots to lessen your score, the smaller the score, the better."
    text = font.render(output_string, True, (0, 0, 0))
    screen.blit(text, [350, 50])

#  variable for x coordinate of basket
bx = 650

#  main loop?
done = False
while not done:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            done = True
    #  timer
    font = pygame.font.SysFont('Comic Sans MS', 25)
    frame_count = pygame.time.get_ticks()
    frame_rate = 17
    start_time = 1818
    total_seconds = start_time - (frame_count // frame_rate)
    if total_seconds < 0:
        total_seconds = 0
    minutes = total_seconds // 60
    seconds = total_seconds % 60
    output_string = "Time left: {}".format(minutes)
    text = font.render(output_string, True, (0, 0, 0))
    screen.blit(text, [50, 50])
    frame_count += 1
    #  will close game once time runs out
    while minutes == 0:
        pygame.quit()

    #  changes speed of dots falling as time decreases (for the levels)
    if minutes > 30:
        ds = 5
    if minutes < 30:
        ds = 7
    if minutes < 10:
        ds = 9

    # Set the screen background
    screen.fill(Sky)

    #  moves the basket
    if event.type == pygame.KEYDOWN:
        if event.key == pygame.K_LEFT:
            bx -= 5
        if event.key == pygame.K_RIGHT:
            bx += 5
    #  prevents basket from disappearing
    if bx > 1350:
        bx = 0
    if bx < 0:
        bx = 1350

    #  create basket
    basket = pygame.sprite.Sprite()
    basket.rect = pygame.Rect(0, 0, 75, 75)
    basket.image = pygame.draw.rect(screen, Br, [bx, 675, 75, 25], 0)

    #  red dots falling
    for i in range(5):
        x = random.randrange(20, 1330)
        y = random.randrange(0, 500)
        dot_listr.append([x, y])
        pygame.draw.circle(screen, R, dot_listr[i], 10, 0)
        dot_listr[i][1] += ds
        #  once dot falls off screen, will reappear at top of screen at a different position
        if dot_listr[i][1] > 720:
            y = random.randrange(-100, 0)
            dot_listr[i][1] = y
            x = random.randrange(0, 1350)
            dot_listr[i][0] = x
        #  collision detection
        rrr = pygame.Rect.colliderect(pygame.Rect(basket.image), pygame.Rect(pygame.draw.circle(screen, R, dot_listr[i], 10, 0)))
        if rrr == True:
            pygame.Rect(pygame.draw.circle(screen, R, dot_listr[i], 10, 0))
            score -= 1

    # green dots falling
    for i in range(5):
        x = random.randrange(20, 1330)
        y = random.randrange(0, 500)
        dot_listg.append([x, y])
        pygame.draw.circle(screen, G, dot_listg[i], 10, 0)
        dot_listg[i][1] += ds
        #  once dot falls off screen, will reappear at top of screen at a different position
        if dot_listg[i][1] > 720:
            y = random.randrange(-100, 0)
            dot_listg[i][1] = y
            x = random.randrange(0, 1350)
            dot_listg[i][0] = x
        #  collision detection
        ggg = pygame.Rect.colliderect(pygame.Rect(basket.image), pygame.Rect(pygame.draw.circle(screen, G, dot_listg[i], 10, 0)))
        if ggg == True:
            score -= 1

    # blue dots falling
    for i in range(5):
        x = random.randrange(20, 1330)
        y = random.randrange(0, 500)
        dot_listb.append([x, y])
        pygame.draw.circle(screen, B, dot_listb[i], 10, 0)
        dot_listb[i][1] += ds
        #  once dot falls off screen, will reappear at top of screen at a different position
        if dot_listb[i][1] > 720:
            y = random.randrange(-100, 0)
            dot_listb[i][1] = y
            x = random.randrange(0, 1350)
            dot_listb[i][0] = x
        #  collision detection
        bbb = pygame.Rect.colliderect(pygame.Rect(basket.image), pygame.Rect(pygame.draw.circle(screen, B, dot_listb[i], 10, 0)))
        if bbb == True:
            score -= 1

    # black dots falling
    for i in range(5):
        x = random.randrange(20, 1330)
        y = random.randrange(0, 500)
        dot_listbl.append([x, y])
        pygame.draw.circle(screen, Bl, dot_listbl[i], 10, 0)
        dot_listbl[i][1] += ds
        #  once dot falls off screen, will reappear at top of screen at a different position
        if dot_listbl[i][1] > 720:
            y = random.randrange(-100, 0)
            dot_listbl[i][1] = y
            x = random.randrange(0, 1350)
            dot_listbl[i][0] = x
        #  collision detection
        bll = pygame.Rect.colliderect(pygame.Rect(basket.image), pygame.Rect(pygame.draw.circle(screen, Bl, dot_listbl[i], 10, 0)))
        if bll == True:
            score += 1
    #  runs ntro
    intro()
    font = pygame.font.SysFont('Comic Sans MS', 25)
    output_string = "score: " + str(score)
    text = font.render(output_string, True, (0, 0, 0))
    screen.blit(text, [50, 100])

    pygame.display.flip()
    clock.tick(50)

pygame.quit()
