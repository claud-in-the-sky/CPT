
#  ffunnccttionnnnsssssss
#  loop through dots to randomize when they fall
    #  possibly make a list and randomly choose a dot from that list
#  loop through y-position of the dots for animation
#  for lvl1, remove red from list
#  for lvl2, remove green from list
#  for lvl3, add black to the list
#  once eat_time (the timer) is finished or 90,000 miliseconds has been reached
    #  end the game
#  add 2 to eat_point (the score counter) each time the top of the arc (basket) touches a coloured dot
#  deduct 1 from eat_point each time the top of the arc (basket) touches a black dot
#  start with lvl1 --> has normal blue, red, green dots and less black dots
#  once eat_point == 10
    #  call lvl2 function
#  once eat_point == 20
    #  call lvl2 function
#  once eat_point == 26
    #  call lvl3 function
----------------------------------------------------------------------
#  LVL 1
import pygame
import random
import math

pygame.init()

Bl = (0, 0, 0)
R = (255, 0, 0)
G = (0, 255, 0)
B = (0, 0, 255)
W = (255, 255, 255)
Br = (139, 69, 19)

SIZE = [1350, 720]
screen = pygame.display.set_mode(SIZE)

dot_list = []
dot_listbl = []
dot_listg = []
dot_listr = []
dot_listb = []

clock = pygame.time.Clock()

for i in range(3):
    clock.tick(20)
    x = random.randrange(0, 1350)
    y = random.randrange(0, 500)
    dot_list.append([x, y])

for i in range(3):
    clock.tick(40)
    x = random.randrange(0, 1350)
    y = random.randrange(0, 500)
    dot_listbl.append([x, y])

for i in range(3):
    clock.tick(40)
    x = random.randrange(0, 1350)
    y = random.randrange(0, 500)
    dot_listr.append([x, y])

for i in range(3):
    clock.tick(40)
    x = random.randrange(0, 1350)
    y = random.randrange(0, 500)
    dot_listg.append([x, y])

for i in range(3):
    clock.tick(40)
    x = random.randrange(0, 1350)
    y = random.randrange(0, 500)
    dot_listb.append([x, y])

bx = 650
# Loop until the user clicks the close button.
done = False
while not done:

    for event in pygame.event.get():  # User did something
        if event.type == pygame.QUIT:  # If user clicked close
            done = True  # Flag that we are done so we exit this loop

    # Set the screen background
    screen.fill(W)

    # Process each snow flake in the list
    for i in range(len(dot_listbl)):
        pygame.draw.circle(screen, Bl, dot_listbl[i], 10, 0)
    for i in range(len(dot_listr)):
        pygame.draw.circle(screen, R, dot_listr[i], 10, 0)
    for i in range(len(dot_listg)):
        pygame.draw.circle(screen, G, dot_listg[i], 10, 0)
    for i in range(len(dot_listb)):
        pygame.draw.circle(screen, B, dot_listb[i], 10, 0)
        pygame.draw.arc(screen, Br, [bx, 625, 75, 75], math.pi, 0, 35)
    for i in range(len(dot_list)):

        # Move the snow flake down one pixel
        dot_listbl[i][1] += 5
        dot_listr[i][1] += 5
        dot_listg[i][1] += 5
        dot_listb[i][1] += 5

        # If the snow flake has moved off the bottom of the screen
        if dot_listbl[i][1] > 720:
            # Reset it just above the top
            y = random.randrange(-50, -10)
            dot_list[i][1] = y
            # Give it a new x position
            x = random.randrange(0, 1350)
            dot_list[i][0] = x
        if dot_listr[i][1] > 720:
            # Reset it just above the top
            y = random.randrange(-50, -10)
            dot_list[i][1] = y
            # Give it a new x position
            x = random.randrange(0, 1350)
            dot_list[i][0] = x
        if dot_listg[i][1] > 720:
            # Reset it just above the top
            y = random.randrange(-50, -10)
            dot_list[i][1] = y
            # Give it a new x position
            x = random.randrange(0, 1350)
            dot_list[i][0] = x
        if dot_listb[i][1] > 720:
            # Reset it just above the top
            y = random.randrange(-50, -10)
            dot_list[i][1] = y
            # Give it a new x position
            x = random.randrange(0, 1350)
            dot_list[i][0] = x
    if event.type == pygame.KEYDOWN:
        if event.key == pygame.K_LEFT:
            bx -= 15
        if event.key == pygame.K_RIGHT:
            bx += 15
    if bx > 1250:
        bx = 1250
    if bx < 20:
        bx = 20

    # update the screen
    pygame.display.flip()
    clock.tick(20)

pygame.quit()
